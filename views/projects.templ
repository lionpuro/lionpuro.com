package views

type projectData struct {
	id          string
	image       string
	url         string
	repo        string
	tags        []string
	title       string
	description string
}

var projects = []projectData{
	{
		id:          "mug-editor",
		image:       "/static/images/mug-editor-demo.webp",
		url:         "https://kankainen.org/mukieditori",
		repo:        "",
		tags:        []string{"TypeScript", "React"},
		title:       "Mug editor",
		description: "A mug designing tool for Mikko Kankainen OY. It allows customers to customize a mug to their liking with images and text.",
	},
	{
		id:          "collage-maker",
		image:       "/static/images/collage-maker-demo.webp",
		url:         "https://svelte-collage.netlify.app",
		repo:        "https://github.com/lionpuro/collage-maker",
		tags:        []string{"TypeScript", "Svelte"},
		title:       "Svelte collage maker",
		description: "A tool for creating collages built with Svelte and Konva.js",
	},
}

templ Projects(isHX bool) {
	if isHX {
		<title>
			Projects - Lion Puro
		</title>
	}
	<div class="flex flex-col">
		<div class="flex flex-col mb-4">
			@mainHeading() {
				Projects
			}
		</div>
		<div class="flex flex-col">
			for _, p := range projects {
				<div class="flex max-md:flex-col-reverse md:flex-row gap-4 md:gap-8 my-4">
					<div class="grow flex flex-col gap-3">
						<div class="flex items-center gap-2">
							<h2 class="text-xl font-semibold">
								{ p.title }
							</h2>
							<span class="ml-auto flex gap-2">
								if p.repo != "" {
									<a
										href={ templ.URL(p.repo) }
										target="_blank"
										rel="noreferrer"
										class="text-base-400 hover:text-base-50"
									>
										@iconGithub()
									</a>
								}
								if p.url != "" {
									<a
										href={ templ.URL(p.url) }
										target="_blank"
										rel="noreferrer"
										class="text-base-400 hover:text-base-50"
									>
										@iconLink()
									</a>
								}
							</span>
						</div>
						<p class="text-base-300">
							{ p.description }
						</p>
						<div class="flex gap-2 mt-auto">
							for _, t := range p.tags {
								<div class="rounded-sm bg-base-900 p-1 px-2 text-sm font-medium">
									{ t }
								</div>
							}
						</div>
					</div>
					<modal-image minWidth="768" class="shrink-0 md:w-1/2">
						<a href={ templ.URL(p.image) } target="_blank" rel="noopener noreferrer" class="max-md:cursor-default">
							<img src={ p.image } alt="" loading="lazy" class="shrink-0 rounded-sm object-contain aspect-video w-full"/>
						</a>
					</modal-image>
				</div>
			}
		</div>
	</div>
}
